name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOCKER_BUILDKIT: 1
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  KUBERNETES_CONFIG: ${{ secrets.KUBERNETES_CONFIG }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Frontend Dependencies
        run: cd frontend && npm ci
        
      - name: Run Frontend Tests
        run: cd frontend && npm test
        
      - name: Run Frontend Linting
        run: cd frontend && npm run lint
        
      - name: Install Backend Dependencies
        run: cd backend && npm ci
        
      - name: Run Backend Tests
        run: cd backend && npm test
        
      - name: Run Backend Linting
        run: cd backend && npm run lint

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install SonarQube Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          echo "$PWD/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH
          
      - name: Run SonarQube Analysis
        run: sonar-scanner

  build:
    needs: [test, sonar]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecotask-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ecotask-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBERNETES_CONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
          
      - name: Deploy to Kubernetes
        run: |
          # Mettre Ã  jour les images dans les manifests Kubernetes
          sed -i "s|image: .*ecotask-frontend.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/ecotask-frontend:${{ github.sha }}|g" k8s/frontend-deployment.yaml
          sed -i "s|image: .*ecotask-backend.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/ecotask-backend:${{ github.sha }}|g" k8s/backend-deployment.yaml
          
          # Appliquer les manifests
          kubectl apply -f k8s/ 